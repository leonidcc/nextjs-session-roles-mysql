import { useRouter } from 'next/router'
import Head from 'next/head'
import Link from 'next/link'
import {useState} from "react"
import post from "/lib/utils"
import getsession from "/lib/session"
import popup from "/lib/popup"


export default function Iniciar() {
  const router = useRouter();
  const [credential, setCredential] = useState({
    email:"",
    password:""
  })
  const handleChange = (e)  =>{
    setCredential(
      {
        ...credential,
        [e.target.name]:e.target.value
      }
    )
  }

  const handleSubmit = async (e) => {
    e.preventDefault();
    let res = await post("/api/authenticate/login",credential);
    if(res.status == 200){
      popup.alert(res.data.message);
      router.push('/dashboard')
    }else{
      popup.alert(res.data.message,"w");
    }
  }

  return (
    <div>
    <Head>
      <title>Create Next App</title>
      <meta name="description" content="Generated by create next app" />

      <link rel="icon" href="/favicon.ico" />
      <meta name="viewport" content="width=device-width, initial-scale=1"/>
      <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous"/>
    </Head>
    <form className="py-5" onSubmit={handleSubmit} style={{"max-width":"500px","margin":"auto"}}>
        <div class="form-floating mb-3">
          <input onChange={handleChange}  type="email" class="form-control"  name="email" placeholder="name@example.com"/>
          <label for="floatingInput">Email address</label>
        </div>
        <div class="form-floating mb-3">
          <input onChange={handleChange} type="password" class="form-control"  name="password" placeholder="Password"/>
          <label for="floatingPassword">Password</label>
        </div>

      <button className="btn btn-primary w-100 mb-2" type="submit">Iniciar</button>
        <Link href={"/logup"}>
        <button className="btn btn-secondary w-100">Crear cuenta</button>
        </Link>
    </form>

    </div>
  )
}

export async function getServerSideProps(context){
  let session = await getsession(context.req);
  if(session != null) return {
    redirect:{
      destination:"/dashboard",
      permanent:false
    }
  }
  return {
    props:{

    }
  }
}
